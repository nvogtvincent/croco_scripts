#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
This script replaces one time slice in the boundary file for croco with the
average of the surrounding time slices in the case that it is found to be
corrupted

Format: python bry_replace bad_time
"""

from netCDF4 import Dataset
import numpy as np
import sys
import os
from shutil import copyfile

##############################################################################
# File locations #############################################################
##############################################################################

output_dir = os.path.dirname(os.path.realpath(__file__))

input_file = output_dir + '/' + 'croco_bry.nc'  # The file generated by CROCO_TOOLS
output_file = output_dir + '/' + 'croco_bry_backup.nc'  # The corrected bry file with corrupted data removed

try:
    bad_time = float(sys.argv[1])
    print('Bad time set to ' + str(bad_time))
    print('')
    print('Copying file to make backup...')
    copyfile(input_file, output_file)
    print('File copied, now carrying out variable replacement')
except (TypeError, IndexError):
    print('No time input provided!')
    raise

with Dataset(input_file, mode='r+') as nc:

    # Find the correct time indices
    i = np.where(nc.variables['salt_time'][:] == bad_time)[0][0]
    print('Bad index is ' + str(i))

    nc.variables['salt_east'][i,:,:] = 0.5*(nc.variables['salt_east'][i-1,:,:] +
                                            nc.variables['salt_east'][i+1,:,:])
    nc.variables['salt_north'][i,:,:] = 0.5*(nc.variables['salt_north'][i-1,:,:] +
                                            nc.variables['salt_north'][i+1,:,:])
    nc.variables['salt_south'][i,:,:] = 0.5*(nc.variables['salt_south'][i-1,:,:] +
                                            nc.variables['salt_south'][i+1,:,:])

    nc.variables['temp_east'][i,:,:] = 0.5*(nc.variables['temp_east'][i-1,:,:] +
                                            nc.variables['temp_east'][i+1,:,:])
    nc.variables['temp_north'][i,:,:] = 0.5*(nc.variables['temp_north'][i-1,:,:] +
                                            nc.variables['temp_north'][i+1,:,:])
    nc.variables['temp_south'][i,:,:] = 0.5*(nc.variables['temp_south'][i-1,:,:] +
                                            nc.variables['temp_south'][i+1,:,:])

    nc.variables['u_east'][i,:,:] = 0.5*(nc.variables['u_east'][i-1,:,:] +
                                            nc.variables['u_east'][i+1,:,:])
    nc.variables['u_north'][i,:,:] = 0.5*(nc.variables['u_north'][i-1,:,:] +
                                            nc.variables['u_north'][i+1,:,:])
    nc.variables['u_south'][i,:,:] = 0.5*(nc.variables['u_south'][i-1,:,:] +
                                            nc.variables['u_south'][i+1,:,:])

    nc.variables['v_east'][i,:,:] = 0.5*(nc.variables['v_east'][i-1,:,:] +
                                            nc.variables['v_east'][i+1,:,:])
    nc.variables['v_north'][i,:,:] = 0.5*(nc.variables['v_north'][i-1,:,:] +
                                            nc.variables['v_north'][i+1,:,:])
    nc.variables['v_south'][i,:,:] = 0.5*(nc.variables['v_south'][i-1,:,:] +
                                            nc.variables['v_south'][i+1,:,:])

    nc.variables['ubar_east'][i,:] = 0.5*(nc.variables['ubar_east'][i-1,:] +
                                            nc.variables['ubar_east'][i+1,:])
    nc.variables['ubar_north'][i,:] = 0.5*(nc.variables['ubar_north'][i-1,:] +
                                            nc.variables['ubar_north'][i+1,:])
    nc.variables['ubar_south'][i,:] = 0.5*(nc.variables['ubar_south'][i-1,:] +
                                            nc.variables['ubar_south'][i+1,:])

    nc.variables['vbar_east'][i,:] = 0.5*(nc.variables['vbar_east'][i-1,:] +
                                            nc.variables['vbar_east'][i+1,:])
    nc.variables['vbar_north'][i,:] = 0.5*(nc.variables['vbar_north'][i-1,:] +
                                            nc.variables['vbar_north'][i+1,:])
    nc.variables['vbar_south'][i,:] = 0.5*(nc.variables['vbar_south'][i-1,:] +
                                            nc.variables['vbar_south'][i+1,:])

    nc.variables['zeta_east'][i,:] = 0.5*(nc.variables['zeta_east'][i-1,:] +
                                            nc.variables['zeta_east'][i+1,:])
    nc.variables['zeta_north'][i,:] = 0.5*(nc.variables['zeta_north'][i-1,:] +
                                            nc.variables['zeta_north'][i+1,:])
    nc.variables['zeta_south'][i,:] = 0.5*(nc.variables['zeta_south'][i-1,:] +
                                            nc.variables['zeta_south'][i+1,:])

    print('Complete!')
